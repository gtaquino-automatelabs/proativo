---
description: 
globs: 
alwaysApply: false
---
```yaml
description: 
globs: 
alwaysApply: false
```

---

# Regra: Geração de Lista de Tarefas a partir de um PRD

## Objetivo

Orientar um assistente de IA na criação de uma lista de tarefas detalhada e passo a passo, em formato Markdown, com base em um Documento de Requisitos de Produto (PRD) existente. A lista de tarefas deve orientar um desenvolvedor durante a implementação.

## Saída Esperada

- **Formato:** Markdown (`.md`)
- **Local:** `/tarefas/`
- **Nome do Arquivo:** `tarefas-[nome-do-arquivo-prd].md` (ex.: `tarefas-prd-edicao-perfil-usuario.md`)

## Processo

1.  **Receber Referência do PRD:** O usuário aponta para um arquivo PRD específico.
2.  **Analisar o PRD:** A IA lê e analisa os requisitos funcionais, histórias de usuário e outras seções do PRD indicado.
3.  **Fase 1: Gerar Tarefas Principais:** Com base na análise do PRD, criar o arquivo e gerar as tarefas principais (de alto nível) necessárias para implementar a funcionalidade. Use bom senso para decidir quantas tarefas principais são necessárias — normalmente em torno de 5. Apresente essas tarefas ao usuário no formato especificado (ainda sem subtarefas). Informe o usuário: "Gerei as tarefas de alto nível com base no PRD. Deseja que eu gere as subtarefas? Responda com 'Go' para prosseguir."
4.  **Aguardar Confirmação:** Pausar e esperar o usuário responder com "Go".
5.  **Fase 2: Gerar Subtarefas:** Após a confirmação do usuário, dividir cada tarefa principal em subtarefas menores e acionáveis necessárias para concluir a tarefa principal. Certifique-se de que as subtarefas seguem logicamente da tarefa principal e cubram os detalhes de implementação implícitos no PRD.
6.  **Identificar Arquivos Relevantes:** Com base nas tarefas e no PRD, identificar os arquivos que precisarão ser criados ou modificados. Liste esses arquivos na seção `Arquivos Relevantes`, incluindo arquivos de teste correspondentes, se aplicável.
7.  **Gerar Saída Final:** Combine as tarefas principais, subtarefas, arquivos relevantes e observações na estrutura Markdown final.
8.  **Salvar Lista de Tarefas:** Salvar o documento gerado no diretório `/tarefas/` com o nome `tarefas-[nome-do-arquivo-prd].md`, onde `[nome-do-arquivo-prd]` corresponde ao nome base do PRD de entrada (ex.: se o PRD for `prd-edicao-perfil-usuario.md`, a saída será `tarefas-prd-edicao-perfil-usuario.md`).

## Formato da Saída

A lista de tarefas gerada _deve_ seguir esta estrutura:

```markdown
## Arquivos Relevantes

- `caminho/para/arquivo1.ts` - Breve descrição de por que este arquivo é relevante (ex.: Componente principal desta funcionalidade).
- `caminho/para/arquivo1.test.ts` - Testes unitários para `arquivo1.ts`.
- `caminho/para/outro/arquivo.tsx` - Breve descrição (ex.: Rota de API para envio de dados).
- `caminho/para/outro/arquivo.test.tsx` - Testes unitários para `outro/arquivo.tsx`.
- `lib/utils/helpers.ts` - Breve descrição (ex.: Funções utilitárias necessárias para cálculos).
- `lib/utils/helpers.test.ts` - Testes unitários para `helpers.ts`.

### Observações

- Testes unitários devem, preferencialmente, estar localizados ao lado dos arquivos que testam (ex.: `MeuComponente.tsx` e `MeuComponente.test.tsx` no mesmo diretório).
- Use `npx jest [caminho/opcional/para/arquivo/teste]` para executar os testes. Executar sem caminho roda todos os testes encontrados pela configuração do Jest.

## Tarefas

- [ ] 1.0 Título da Tarefa Principal
  - [ ] 1.1 [Descrição da Subtarefa 1.1]
  - [ ] 1.2 [Descrição da Subtarefa 1.2]
- [ ] 2.0 Título da Tarefa Principal
  - [ ] 2.1 [Descrição da Subtarefa 2.1]
- [ ] 3.0 Título da Tarefa Principal (pode não exigir subtarefas se for apenas estrutural ou de configuração)
```

## Modelo de Interação

O processo exige explicitamente uma pausa após a geração das tarefas principais para obter confirmação do usuário ("Go") antes de prosseguir para as subtarefas detalhadas. Isso garante que o plano de alto nível esteja alinhado com as expectativas antes de aprofundar os detalhes.

## Público-Alvo

Assuma que o principal leitor da lista de tarefas é um **desenvolvedor júnior** que implementará a funcionalidade.
